Auth: Vinit Rajguru
# Date: Oct 21, 2017
# Desc:  Auto Dataset from ISLR
# 
#



## In this Data set, we develop different models and predict whether a given
# cars gets high or low mileage

# first we create a binary variable, mpg01, that contains a 1 if mpg contains
#a value above its median, and 0 if mpg contains  avalue below its median

#upload the data
library(ISLR)
View(Auto)
dim(Auto)
summary(Auto)
attach(Auto)
mpg01=rep(0,length(mpg))
mpg01[mpg>median(mpg)]=1
Auto=data.frame(Auto,mpg01)

# now we have 392 obs and 10 variables including dummy variabl mpg01


# Now we explore the data for finding some association between mpg01
# and other features
cor(Auto[,-9])
pairs(Auto)

# Nowe we split our data into training and a test set
library(caTools)
train = (year%%2 == 0)  # if the year is even
test = !train
Auto.train = Auto[train, ]
Auto.test = Auto[test, ]
mpg01.test = mpg01[test]


# Now we perfrom LDA on this data set
library(MASS)
lda.fit=lda(mpg01~cylinders+displacement+ weight+horsepower,data = Auto,subset = train)
lda.pred=predict(lda.fit,Auto.test)
mean(lda.pred$class!= mpg01.test)

#12.6% - test error rate



#Now we perform QDA
qda.fit=qda(mpg01~cylinders+displacement+ weight+horsepower,data = Auto,subset = train)
qda.pred=predict(qda.fit,Auto.test)
mean(qda.pred$class!= mpg01.test)

#13.1% - test error rate



# now we perfrom logistic regression on the training data set
glm.fit=glm(mpg01~cylinders+displacement+horsepower+weight,data = Auto,family = binomial,subset = train)
glm.probs=predict(glm.fit,Auto.test,type = "response")
glm.pred=rep(0,length(glm.probs))
glm.pred[glm.probs>0.5]=1
mean(glm.pred!=mpg01.test)
# 12.08% - test error rate


# Now we perfrom KNN for the tarining data set
library(class)
train.1=cbind(cylinders,displacement,horsepower,weight)[train,]
test.1=cbind(cylinders,displacement,horsepower,weight)[test,]
set.seed(1)

KNN (k=3)
knn.pred=knn(train.1,test.1,train.mpg01,k=3)
mean(knn.pred!=mpg01.test)

# we can change KNN(k=1,2,3,50,100) as per our specific requirement


